{"version":3,"sources":["state.ts","calculationService.ts","CalculationDatePicker.tsx","GestationalAgeForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Target","totalDays","ga","weeks","days","birthGestWeeksSubject","Subject","birthGestWeeks$","pipe","startWith","bind","useCurrentBirthGestWeeks","currentBirthGestWeeks$","birthGestDaysSubject","birthGestDays$","useCurrentBirthGestDays","currentBirthGestDays$","dateGestWeeksSubject","dateGestWeeks$","onDateGestWeeksChange","x","next","useCurrentDateGestWeeks","currentDateGestWeeks$","dateGestDaysSubject","dateGestDays$","onDateGestDaysChange","useCurrentDateGestDays","currentDateGestDays$","birthdaySubject","birthday$","Date","useCurrentBirthday","currentBirthday$","calcDaySubject","calcDay$","onCalcDayChange","calcDay","useCurrentCalcDay","currentCalcDay$","calcTargetSubject","calcTarget$","GestAgeAtDate","onCalcTargetChange","calcTarget","currentCalcTarget$","CalculationService","combineLatest","subscribe","birthday","gestAgeAtBirth","targetDay","targetLocalDate","LocalDate","of","getFullYear","getMonth","getDate","birthdayLocalDate","daysSinceBirthday","ChronoUnit","DAYS","between","totalDaysAtTargetDate","targetGestAgeDays","targetGestAgeWeeks","console","log","DateAtGestAge","plusDays","targetDate","year","monthValue","dayOfMonth","CalculationDatePicker","value","valueHook","className","label","dateFormat","selected","onChange","handleFocus","event","target","select","GestationalAgeForm","weeksHook","daysHook","onFocus","e","hook","newValue","Number","isNaN","toString","onWeeksChange","onDaysChange","run","onBirthGestAgeWeeksChanged","onBirthGestAgeDaysChanged","onDateGestAgeWeeksChanged","onDateGestAgeDaysChanged","onCalcDayUserChanged","d","App","birthGestWeeks","birthGestDays","ageDays","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.508e99dc.chunk.js","sourcesContent":["import { Subject } from 'rxjs'\nimport { startWith } from 'rxjs/operators'\nimport { bind } from '@react-rxjs/core'\n\nexport enum Target {\n    GestAgeAtDate,\n    DateAtGestAge\n}\n\nexport interface GestAge {\n    weeks: number,\n    days: number\n}\n\nexport function totalDays(ga: GestAge): number {\n    return (ga.weeks * 7) + ga.days\n}\n\nexport const INITIAL_BIRTH_GEST_WEEKS = 28\nexport const INITIAL_BIRTH_GEST_DAYS = 0\n\nconst birthGestWeeksSubject = new Subject<number>()\nconst birthGestWeeks$ = birthGestWeeksSubject.pipe(startWith(INITIAL_BIRTH_GEST_WEEKS))\nexport const onBirthGestWeeksChange = (x: number) => { birthGestWeeksSubject.next(x) }\nexport const [useCurrentBirthGestWeeks, currentBirthGestWeeks$] = bind(birthGestWeeks$, 0)\n\nconst birthGestDaysSubject = new Subject<number>()\nconst birthGestDays$ = birthGestDaysSubject.pipe(startWith(INITIAL_BIRTH_GEST_DAYS))\nexport const onBirthGestDaysChange = (x: number) => { birthGestDaysSubject.next(x) }\nexport const [useCurrentBirthGestDays, currentBirthGestDays$] = bind(birthGestDays$, 0)\n\nconst dateGestWeeksSubject = new Subject<number>()\nconst dateGestWeeks$ = dateGestWeeksSubject.pipe(startWith(INITIAL_BIRTH_GEST_WEEKS))\nexport const onDateGestWeeksChange = (x: number) => { dateGestWeeksSubject.next(x) }\nexport const [useCurrentDateGestWeeks, currentDateGestWeeks$] = bind(dateGestWeeks$, 0)\n\nconst dateGestDaysSubject = new Subject<number>()\nconst dateGestDays$ = dateGestDaysSubject.pipe(startWith(INITIAL_BIRTH_GEST_DAYS))\nexport const onDateGestDaysChange = (x: number) => { dateGestDaysSubject.next(x) }\nexport const [useCurrentDateGestDays, currentDateGestDays$] = bind(dateGestDays$, 0)\n\nconst birthdaySubject = new Subject<Date>()\nconst birthday$ = birthdaySubject.pipe(startWith(new Date()))\nexport const onBirthdayChange = (birthday: Date) => { birthdaySubject.next(birthday) }\nexport const [useCurrentBirthday, currentBirthday$] = bind(birthday$, new Date())\n\nconst calcDaySubject = new Subject<Date>()\nconst calcDay$ = calcDaySubject.pipe(startWith(new Date()))\nexport const onCalcDayChange = (calcDay: Date) => {\n    calcDaySubject.next(calcDay)\n}\n\nexport const [useCurrentCalcDay, currentCalcDay$] = bind(calcDay$, new Date())\n\nconst calcTargetSubject = new Subject<Target>()\nconst calcTarget$ = calcTargetSubject.pipe(startWith(Target.GestAgeAtDate))\nexport const onCalcTargetChange = (calcTarget: Target) => {\n    calcTargetSubject.next(calcTarget)\n}\nexport const [useCurrentCalcTarget, currentCalcTarget$] = bind(calcTarget$, Target.GestAgeAtDate)\n","import {\n  onDateGestWeeksChange,\n  onDateGestDaysChange,\n  Target,\n  currentCalcDay$,\n  currentCalcTarget$,\n  currentBirthday$,\n  currentBirthGestWeeks$,\n  currentBirthGestDays$,\n  currentDateGestWeeks$,\n  currentDateGestDays$,\n  GestAge,\n  totalDays,\n  onCalcDayChange\n} from './state'\nimport { LocalDate, ChronoUnit } from 'js-joda'\nimport { combineLatest } from 'rxjs'\n\nexport class CalculationService {\n\n  run() {\n    combineLatest([\n      currentCalcTarget$,\n      currentBirthday$,\n      currentBirthGestWeeks$,\n      currentBirthGestDays$,\n      currentCalcDay$,\n      currentDateGestWeeks$,\n      currentDateGestDays$])\n      .subscribe(x => {\n        if (x[0] === Target.GestAgeAtDate) {\n          const birthday = x[1]\n          const gestAgeAtBirth = {weeks: x[2], days: x[3]} as GestAge\n          const targetDay = x[4]\n          const targetLocalDate = LocalDate.of(targetDay.getFullYear(), targetDay.getMonth() + 1, targetDay.getDate())\n          const birthdayLocalDate = LocalDate.of(birthday.getFullYear(), birthday.getMonth() + 1, birthday.getDate())\n\n          const daysSinceBirthday = ChronoUnit.DAYS.between(birthdayLocalDate, targetLocalDate)\n\n          const totalDaysAtTargetDate = (gestAgeAtBirth.weeks * 7) + gestAgeAtBirth.days + daysSinceBirthday\n\n          const targetGestAgeDays = totalDaysAtTargetDate % 7\n          const targetGestAgeWeeks = (totalDaysAtTargetDate - targetGestAgeDays) / 7\n\n          console.log(`calculated gest age: ${targetGestAgeWeeks}/${targetGestAgeDays}`)\n\n          if (targetGestAgeWeeks !== x[5]) {\n            onDateGestWeeksChange(targetGestAgeWeeks)\n          }\n\n          if (targetGestAgeDays !== x[6]) {\n            onDateGestDaysChange(targetGestAgeDays)\n          }\n        }\n        else if (x[0] === Target.DateAtGestAge) {\n          const birthday = x[1]\n          const gestAgeAtBirth = {weeks: x[2], days: x[3]} as GestAge\n          const birthdayLocalDate = LocalDate.of(birthday.getFullYear(), birthday.getMonth() + 1, birthday.getDate())\n          const targetGestAge = {weeks: x[5], days: x[6]} as GestAge\n          const daysSinceBirthday = totalDays(targetGestAge) - totalDays(gestAgeAtBirth)\n\n          const targetLocalDate = birthdayLocalDate.plusDays(daysSinceBirthday)\n          const targetDate = new Date(targetLocalDate.year(), targetLocalDate.monthValue() - 1, targetLocalDate.dayOfMonth())\n\n          if (targetDate.getFullYear !== x[4].getFullYear\n              || targetDate.getMonth() !== x[4].getMonth()\n              || targetDate.getDate() !== x[4].getDate()) {\n            console.log(`calculated date at gest age: ${targetDate}`)\n            onCalcDayChange(targetDate)\n          }\n        }\n      })\n  }\n}","import DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport const CalculationDatePicker: React.FC<{ label: String, valueHook: () => Date, onChange: any }> = (x) => {\n\n  const value = x.valueHook()\n\n  return (\n    <div>\n      <p className=\"label\">{x.label}</p>\n      <DatePicker className=\"datepick\" dateFormat=\"dd/MM/yyyy\" selected={value} onChange={x.onChange} />\n    </div>\n  );\n}","\nconst handleFocus = (event: any) => event.target.select();\n\nexport const GestationalAgeForm: React.FC<{ label: string, weeksHook: () => number, onWeeksChange: any, daysHook: () => number, onDaysChange: any }> = (x) => {\n\n  const weeks = x.weeksHook()\n  const days = x.daysHook()\n\n  const onDaysChange = (event: React.ChangeEvent<HTMLInputElement>, hook: any) => {\n    const newValue = Number(event.target.value)\n\n    if (isNaN(newValue) || newValue < 0 || newValue > 6) {\n      event.target.value = days.toString()\n      event.target.select()\n      return;\n    }\n    \n    hook(event)\n  }\n\n  const onWeeksChange = (event: React.ChangeEvent<HTMLInputElement>, hook: any) => {\n    const newValue = Number(event.target.value)\n\n    if (isNaN(newValue) || newValue < 0 || newValue > 99) {\n      event.target.value = weeks.toString()\n      event.target.select()\n      return;\n    }\n    \n    hook(event)\n  }\n\n  return (\n    <div>\n      <p className=\"label\">{x.label}</p>\n      <div>\n        <input\n          className=\"gest-input\"\n          onFocus={handleFocus}\n          onChange={e => onWeeksChange(e, x.onWeeksChange)}\n          value={weeks}></input>\n        Weeks\n        <input\n          className=\"gest-input\"\n          onFocus={handleFocus}\n          onChange={e => onDaysChange(e, x.onDaysChange)}\n          value={days}></input>\n        Days\n      </div>\n    </div>\n  );\n}","import { ChangeEvent } from 'react';\nimport './App.css';\nimport {\n  onBirthGestWeeksChange,\n  onBirthGestDaysChange,\n  onBirthdayChange,\n  useCurrentBirthGestWeeks,\n  useCurrentBirthGestDays,\n  onDateGestWeeksChange,\n  onDateGestDaysChange,\n  useCurrentDateGestWeeks,\n  useCurrentDateGestDays,\n  useCurrentBirthday,\n  Target,\n  useCurrentCalcDay,\n  onCalcDayChange,\n  onCalcTargetChange\n} from './state'\nimport { CalculationService } from './calculationService';\nimport { CalculationDatePicker } from './CalculationDatePicker';\nimport { GestationalAgeForm } from './GestationalAgeForm';\n\n\ntype InputEvent = ChangeEvent<HTMLInputElement>\ntype ChangeHandler = (e: InputEvent) => void\n\nnew CalculationService().run()\n\nconst onBirthGestAgeWeeksChanged: ChangeHandler = (e) => {\n  onBirthGestWeeksChange(Number(e.target.value))\n}\n\nconst onBirthGestAgeDaysChanged: ChangeHandler = (e) => {\n  onBirthGestDaysChange(Number(e.target.value))\n}\n\nconst onDateGestAgeWeeksChanged: ChangeHandler = (e) => {\n  onCalcTargetChange(Target.DateAtGestAge)\n  onDateGestWeeksChange(Number(e.target.value))\n}\n\nconst onDateGestAgeDaysChanged: ChangeHandler = (e) => {\n  onCalcTargetChange(Target.DateAtGestAge)\n  onDateGestDaysChange(Number(e.target.value))\n}\n\nconst onCalcDayUserChanged = (d: Date) => {\n  onCalcTargetChange(Target.GestAgeAtDate)\n  onCalcDayChange(d)\n}\n\nfunction App() {\n\n  const birthGestWeeks = useCurrentBirthGestWeeks()\n  const birthGestDays = useCurrentBirthGestDays()\n  const dateGestWeeks = useCurrentDateGestWeeks()\n  const dateGestDays = useCurrentDateGestDays()\n\n  const ageDays = ((dateGestWeeks * 7) + dateGestDays) - ((birthGestWeeks * 7) + birthGestDays)\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <p >Nicola's AMAZING</p>\n        <p> Gestational Age Calculator</p>\n      </div>\n      <div className=\"section\">\n        <CalculationDatePicker\n          label=\"Birthday\"\n          valueHook={useCurrentBirthday}\n          onChange={(d: Date) => onBirthdayChange(d)} />\n      </div>\n      <div className=\"section\">\n        <GestationalAgeForm\n          label=\"Gestational age at birth\"\n          onWeeksChange={onBirthGestAgeWeeksChanged}\n          onDaysChange={onBirthGestAgeDaysChanged}\n          weeksHook={useCurrentBirthGestWeeks}\n          daysHook={useCurrentBirthGestDays}\n        />\n      </div>\n      <div className=\"section\">\n        <CalculationDatePicker\n          label=\"Calculation date\"\n          valueHook={useCurrentCalcDay}\n          onChange={onCalcDayUserChanged} />\n        <p>age: {ageDays} days</p>\n      </div>\n      <div className=\"section\">\n        <GestationalAgeForm\n          label=\"Corrected gestational age\"\n          onWeeksChange={onDateGestAgeWeeksChanged}\n          onDaysChange={onDateGestAgeDaysChanged}\n          weeksHook={useCurrentDateGestWeeks}\n          daysHook={useCurrentDateGestDays} />\n      </div>\n      <p className=\"footer\">v0.0.4</p>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}